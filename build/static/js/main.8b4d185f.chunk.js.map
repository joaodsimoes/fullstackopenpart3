{"version":3,"sources":["components/PhonebookEntry.js","components/Input.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Entry","entry","onClick","name","number","Input","props","description","value","onChange","required","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","error","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","people","setPeople","setNewName","setNewNumber","filterName","setFilterName","errorMessage","setErrorMessage","isError","setIsError","useEffect","console","log","personService","entriesToShow","filter","person","toUpperCase","includes","showErrorMessage","setTimeout","event","preventDefault","newEntry","user","find","undefined","window","confirm","responseData","map","p","catch","status","concat","target","key","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b4d185f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Entry = ({entry,onClick}) => <li>{entry.name}: {entry.number} <button onClick = {onClick}>Delete</button> </li>\r\n\r\n\r\nexport default Entry","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return(\r\n        <div>\r\n          {props.description} <input value = {props.value} onChange={props.onChange} required />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Input from './Input'\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n      <form onSubmit={props.addPerson} >\r\n        <Input description = 'name' value = {props.newName} onChange = {props.handleNameChange}/>\r\n        <Input description = 'number' value = {props.newNumber} onChange = {props.handleNumberChange} />\r\n        <div>\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\nexport default PersonForm","import React from 'react'\r\n\r\nlet style = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: \"20px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: \"5px\",\r\n    padding: \"10px\",\r\n    marginBottom: \"10px\",\r\n  }\r\n\r\nconst Notification = ({ message,error}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if(error)\r\n        style = {...style, color: \"red\"}\r\n    else\r\n    style = {...style, color: \"green\"}\r\n        \r\n    return (\r\n      <div style = {style} className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n export default Notification ","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Entry from './components/PhonebookEntry'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Input from './components/Input'\nimport personService from './services/persons'\n\n\n\n\nconst App = () => {\n\n  const [people, setPeople] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterName, setFilterName] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n\n  useEffect(() => {\n    console.log(\"Requesting persons in phonebook...\");\n    personService\n      .getAll()\n      .then(people => {\n        console.log('Promise fulfilled', people)\n        setPeople(people)\n      })\n  }, [])\n\n\n  const entriesToShow = people.filter(person => person.name.toUpperCase().includes(filterName.toUpperCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newEntry = { name: newName, number: newNumber }\n    const user = people.find((person) => person.name === newName)\n\n    if (user !== undefined) {\n      const result = window.confirm(`${newName} has already been added to the phonebook, replace old number with new one?`)\n      if (result) {\n        personService\n          .update(user.id, newEntry)\n          .then(responseData =>{ \n          setPeople(people.map(p => p.id !== user.id ? p : responseData))\n          showErrorMessage(`${user.name}'s info was successfully updated.`,false)\n        }).catch((error) =>{\n          console.log(error.response)\n          console.log(error.response.status);\n          if(error.response.status === 404)\n            setPeople(people.filter((p) => p.id !== user.id))\n\n          showErrorMessage(error.response.data,true) \n\n        })\n      }\n    } else {\n      personService\n        .create(newEntry)\n        .then(person =>{ \n        setPeople(people.concat(person))\n        showErrorMessage(`${person.name} was successfully added to the phonebook.`,false)  \n        }).catch(error => showErrorMessage(error.response.data,true)  )\n\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (person) => {\n\n    const message = `Delete ${person.name}?`\n    const result = window.confirm(message);\n    if (result) {\n      const id = person.id\n      personService\n        .deletePerson(id)\n        .then(response =>{ \n          setPeople(people.filter((p) => p.id !== id))\n          showErrorMessage(`${person.name} was deleted.`,false)\n        })\n        .catch(error =>{\n          setPeople(people.filter((p) => p.id !== id))\n          showErrorMessage(error.response.data,true) \n        })\n    }\n  }\n\n\n  const showErrorMessage = (message,isError) => {\n    setIsError(isError)\n    setErrorMessage(message)\n   \n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterNameChange = (event) => {\n    console.log(event.target.value)\n    setFilterName(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {errorMessage} error = {isError}/>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Filter by name</h2>\n      <Input description='Filter' value={filterName} onChange={handleFilterNameChange} />\n      <h2>Numbers</h2>\n      <ul>\n        {entriesToShow.map((person) => <Entry key={person.id} entry={person} onClick={() => deletePerson(person)} />)}\n      </ul>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from'./App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}